{"version":3,"sources":["components/Button/index.jsx","components/Search/index.jsx","components/Table/index.jsx","constants/index.js","components/App/index.js","reportWebVitals.js","index.js"],"names":["Button","children","candApesiClick","className","onClick","type","Search","placeholder","onChange","value","onSearchSubmit","onSubmit","Table","list","onDismiss","map","item","style","width","href","url","title","author","num_comments","points","objectID","PATH_BASE","PATH_SEARCH","PARAM_SEARCH","PARAM_PAGE","PARAM_HPP","App","props","setSearchTopStories","result","hits","page","state","searchKey","results","oldHits","updatedHits","setState","needsToSearchTopStories","searchTerm","fetchSearchTopStories","axios","then","data","catch","error","id","filter","event","preventDefault","onSearchChange","target","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAQeA,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,eAAgBC,EAA7B,EAA6BA,UAA7B,OACb,wBAAQC,QAASF,EAAgBG,KAAK,SAASF,UAAWA,EAA1D,SACGF,KCgBUK,EAhBA,SAAC,GAAD,EAAGC,YAAH,IAAgBC,EAAhB,EAAgBA,SAAUC,EAA1B,EAA0BA,MAAiBC,GAA3C,EAAiCT,SAAjC,EAA2CS,gBAA3C,OACb,sBAAMC,SAAUD,EAAhB,SACE,sBAAKP,UAAU,qBAAf,UACE,uBACEK,SAAUA,EACVC,MAAOA,EACPJ,KAAK,OACLE,YAAY,cAEd,cAAC,EAAD,CAAQL,eAAgBQ,EAAgBP,UAAU,sBAAlD,0BCaSS,EAvBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAT,OACZ,qBAAKX,UAAU,QAAf,SACGU,EAAKE,KAAI,SAAAC,GAAI,OACZ,sBAAyBb,UAAU,YAAnC,UACE,sBAAMc,MAAO,CAAEC,MAAO,OAAtB,SACE,mBAAGC,KAAMH,EAAKI,IAAd,SAAoBJ,EAAKK,UAE3B,sBAAMJ,MAAO,CAAEC,MAAO,OAAtB,SAAgCF,EAAKM,SACrC,sBAAML,MAAO,CAAEC,MAAO,OAAtB,SAAgCF,EAAKO,eACrC,sBAAMN,MAAO,CAAEC,MAAO,OAAtB,SAAgCF,EAAKQ,SACrC,sBAAMP,MAAO,CAAEC,MAAO,OAAtB,SACE,cAAC,EAAD,CACEhB,eAAgB,kBAAMY,EAAUE,EAAKS,WACrCtB,UAAU,iBAFZ,SAIE,mBAAGA,UAAU,uCAZTa,EAAKS,gBCHRC,EAAY,iCACZC,EAAc,UACdC,EAAe,SACfC,EAAa,QACbC,EAAY,eC8IVC,E,kDAjIb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,oBAAsB,SAAAC,GAAU,IAEtBC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KAFgB,EAGC,EAAKC,MAA5BC,EAHsB,EAGtBA,UAAWC,EAHW,EAGXA,QAEbC,EACJD,GAAWA,EAAQD,GAAaC,EAAQD,GAAWH,KAAO,GAEtDM,EAAW,sBAAOD,GAAP,YAAmBL,IAEpC,EAAKO,SAAS,CACZH,QAAQ,2BACHA,GADE,kBAEJD,EAAY,CAAEH,KAAMM,EAAaL,aAxBrB,EA8BnBO,wBAA0B,SAAAC,GAExB,OAAQ,EAAKP,MAAME,QAAQK,IAhCV,EAoCnBC,sBAAwB,SAACD,GAA0B,IAAdR,EAAa,uDAAN,EAC1CU,IAAM,GAAD,OACApB,GADA,OACYC,EADZ,YAC2BC,GAD3B,OAC0CgB,EAD1C,YACwDf,GADxD,OACqEO,EADrE,YAC6EN,GAD7E,ODxDkB,OC2DpBiB,MAAK,SAAAb,GAAM,OAAI,EAAKD,oBAAoBC,EAAOc,SAC/CC,OAAM,SAAAC,GAAK,OAAI,EAAKR,SAAS,CAAEQ,cAzCjB,EAqDnBpC,UAAY,SAAAqC,GAAO,IAAD,EACe,EAAKd,MAA5BC,EADQ,EACRA,UAAWC,EADH,EACGA,QADH,EAEOA,EAAQD,GAAvBH,EAFQ,EAERA,KAAMC,EAFE,EAEFA,KAGRK,EAAcN,EAAKiB,QAAO,SAAApC,GAAI,OAAIA,EAAKS,WAAa0B,KAG1D,EAAKT,SAAS,CACZH,QAAQ,2BACHA,GADE,kBAEJD,EAAY,CAAEH,KAAMM,EAAaL,aAhErB,EAqEnB1B,eAAiB,SAAA2C,GAAU,IACjBT,EAAe,EAAKP,MAApBO,WAER,EAAKF,SAAS,CAAEJ,UAAWM,IAGvB,EAAKD,wBAAwBC,IAC/B,EAAKC,sBAAsBD,GAE7BS,EAAMC,kBA9EW,EAkFnBC,eAAiB,SAAAF,GACf,EAAKX,SAAS,CAAEE,WAAYS,EAAMG,OAAO/C,SAhFzC,EAAK4B,MAAQ,CACXE,QAAS,KACTD,UAAW,GACXM,WD1BuB,GC2BvBM,MAAO,MAPQ,E,gEA4CE,IACXN,EAAea,KAAKpB,MAApBO,WAGRa,KAAKf,SAAS,CAAEJ,UAAWM,IAE3Ba,KAAKZ,sBAAsBD,K,+BAoCnB,IAAD,SAC2Ca,KAAKpB,MAA/CE,EADD,EACCA,QAASK,EADV,EACUA,WAAYN,EADtB,EACsBA,UAAWY,EADjC,EACiCA,MAElCd,EACHG,GAAWA,EAAQD,IAAcC,EAAQD,GAAWF,MAAS,EAE1DvB,EACH0B,GAAWA,EAAQD,IAAcC,EAAQD,GAAWH,MAAS,GAEhE,OACE,sBAAKhC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEI,YAAY,aACZC,SAAUiD,KAAKF,eACf9C,MAAOmC,EACPlC,eAAgB+C,KAAK/C,eAJvB,SAME,4CAGHwC,EACC,qBAAK/C,UAAU,eAAf,SACE,iEAGF,cAAC,EAAD,CAAOU,KAAMA,EAAMC,UAAW2C,KAAK3C,YAErC,qBAAKX,UAAU,eAAf,SACE,cAAC,EAAD,CACEA,UAAU,sBACVD,eAAgB,kBACd,EAAK2C,sBAAsBP,EAAWF,EAAO,IAHjD,2B,GApHQsB,IAAMC,WCPTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d11e570b.chunk.js","sourcesContent":["import React, { Children } from \"react\";\n\nconst Button = ({ children, candApesiClick, className }) => (\n  <button onClick={candApesiClick} type=\"button\" className={className}>\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\n\nimport Button from \"../Button\";\n\nconst Search = ({ placeholder, onChange, value, children, onSearchSubmit }) => (\n  <form onSubmit={onSearchSubmit}>\n    <div className=\"ui category search\">\n      <input\n        onChange={onChange}\n        value={value}\n        type=\"text\"\n        placeholder=\"Search...\"\n      />\n      <Button candApesiClick={onSearchSubmit} className=\"ui secondary button\">\n        Search\n      </Button>\n    </div>\n  </form>\n);\n\nexport default Search;\n","import React from \"react\";\nimport Button from \"../Button\";\n\nconst Table = ({ list, onDismiss }) => (\n  <div className=\"table\">\n    {list.map(item => (\n      <div key={item.objectID} className=\"table-row\">\n        <span style={{ width: \"40%\" }}>\n          <a href={item.url}>{item.title}</a>\n        </span>\n        <span style={{ width: \"30%\" }}>{item.author}</span>\n        <span style={{ width: \"10%\" }}>{item.num_comments}</span>\n        <span style={{ width: \"10%\" }}>{item.points}</span>\n        <span style={{ width: \"10%\" }}>\n          <Button\n            candApesiClick={() => onDismiss(item.objectID)}\n            className=\"button-inline \"\n          >\n            <i className=\"trash alternate outline icon\"></i>\n          </Button>\n        </span>\n      </div>\n    ))}\n  </div>\n);\n\nexport default Table;\n","export const DEFAULT_QUERY = \"\";\nexport const DEFAULT_HPP = \"20\";\n\nexport const PATH_BASE = \"https://hn.algolia.com/api/v1/\";\nexport const PATH_SEARCH = \"/search\";\nexport const PARAM_SEARCH = \"query=\";\nexport const PARAM_PAGE = \"page=\";\nexport const PARAM_HPP = \"hitsPerPage=\";\n","import \"./index.css\";\nimport React from \"react\";\n\nimport axios from \"axios\";\n\nimport Search from \"../Search\";\nimport Table from \"../Table\";\nimport Button from \"../Button\";\n\nimport {\n  DEFAULT_QUERY,\n  DEFAULT_HPP,\n  PATH_BASE,\n  PATH_SEARCH,\n  PARAM_SEARCH,\n  PARAM_PAGE,\n  PARAM_HPP,\n} from \"../../constants\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      results: null,\n      searchKey: \"\",\n      searchTerm: DEFAULT_QUERY,\n      error: null,\n    };\n  }\n\n  setSearchTopStories = result => {\n    // destructuring hits and page from the result state\n    const { hits, page } = result;\n    const { searchKey, results } = this.state;\n\n    const oldHits =\n      results && results[searchKey] ? results[searchKey].hits : [];\n\n    const updatedHits = [...oldHits, ...hits];\n\n    this.setState({\n      results: {\n        ...results,\n        [searchKey]: { hits: updatedHits, page },\n      },\n    });\n  };\n\n  //searching for cache results\n  needsToSearchTopStories = searchTerm => {\n    //takes the serchTerm as input and returns if there are no results based on searchTerm key\n    return !this.state.results[searchTerm];\n  };\n\n  // method to fetch data from api\n  fetchSearchTopStories = (searchTerm, page = 0) => {\n    axios(\n      `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`\n    )\n      .then(result => this.setSearchTopStories(result.data))\n      .catch(error => this.setState({ error }));\n  };\n\n  componentDidMount() {\n    const { searchTerm } = this.state;\n\n    //update searchKey\n    this.setState({ searchKey: searchTerm });\n    // update state\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onDismiss = id => {\n    const { searchKey, results } = this.state;\n    const { hits, page } = results[searchKey];\n\n    //check for the item id and filter the list\n    const updatedHits = hits.filter(item => item.objectID !== id);\n\n    //update state with the updated list\n    this.setState({\n      results: {\n        ...results,\n        [searchKey]: { hits: updatedHits, page },\n      },\n    });\n  };\n\n  onSearchSubmit = event => {\n    const { searchTerm } = this.state;\n    //update searchKey\n    this.setState({ searchKey: searchTerm });\n\n    //checks if there are no results[searchTherm]\n    if (this.needsToSearchTopStories(searchTerm)) {\n      this.fetchSearchTopStories(searchTerm);\n    }\n    event.preventDefault();\n  };\n\n  // input handler\n  onSearchChange = event => {\n    this.setState({ searchTerm: event.target.value });\n  };\n\n  render() {\n    const { results, searchTerm, searchKey, error } = this.state;\n\n    const page =\n      (results && results[searchKey] && results[searchKey].page) || 0;\n\n    const list =\n      (results && results[searchKey] && results[searchKey].hits) || [];\n\n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n          <Search\n            placeholder=\"e.g. React\"\n            onChange={this.onSearchChange}\n            value={searchTerm}\n            onSearchSubmit={this.onSearchSubmit}\n          >\n            <h1>Search</h1>\n          </Search>\n        </div>\n        {error ? (\n          <div className=\"interactions\">\n            <p>Ohh Noo. Something went wrong.</p>\n          </div>\n        ) : (\n          <Table list={list} onDismiss={this.onDismiss} />\n        )}\n        <div className=\"interactions\">\n          <Button\n            className=\"ui secondary button\"\n            candApesiClick={() =>\n              this.fetchSearchTopStories(searchKey, page + 1)\n            }\n          >\n            More\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}